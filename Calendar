<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    #calendar {
      max-width: 600px;
      margin: auto;
    }

    .calendar-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px;
      background-color: #ddd;
    }

    .calendar-grid {
      display: grid;
      grid-template-columns: repeat(7, 1fr);
      gap: 5px;
    }

    .calendar-day {
      position: relative;
      padding: 10px;
      text-align: center;
      cursor: pointer;
    }

    .memo-marker {
      position: absolute;
      top: 5px;
      right: 5px;
      display: inline-block;
      width: 10px;
      height: 10px;
      background-color: #f00;
      border-radius: 50%;
    }
  </style>
  <title>Calendar App</title>
</head>
<body>
  <div id="calendar"></div>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const calendarContainer = document.getElementById('calendar');
      let selectedDate = null;

      function renderCalendar(year, month) {
        const calendarHeader = createCalendarHeader(year, month);
        const calendarGrid = createCalendarGrid(year, month);
        
        calendarContainer.innerHTML = '';
        calendarContainer.appendChild(calendarHeader);
        calendarContainer.appendChild(calendarGrid);
      }

      function createCalendarHeader(year, month) {
        const header = document.createElement('div');
        header.className = 'calendar-header';

        const prevMonthBtn = document.createElement('button');
        prevMonthBtn.innerText = '<';
        prevMonthBtn.addEventListener('click', () => {
          month -= 1;
          if (month < 0) {
            month = 11;
            year -= 1;
          }
          renderCalendar(year, month);
        });

        const nextMonthBtn = document.createElement('button');
        nextMonthBtn.innerText = '>';
        nextMonthBtn.addEventListener('click', () => {
          month += 1;
          if (month > 11) {
            month = 0;
            year += 1;
          }
          renderCalendar(year, month);
        });

        const monthYearLabel = document.createElement('div');
        monthYearLabel.innerText = `${getMonthName(month)} ${year}`;

        header.appendChild(prevMonthBtn);
        header.appendChild(monthYearLabel);
        header.appendChild(nextMonthBtn);

        return header;
      }

      function createCalendarGrid(year, month) {
        const grid = document.createElement('div');
        grid.className = 'calendar-grid';

        const daysInMonth = new Date(year, month + 1, 0).getDate();
        const firstDayOfMonth = new Date(year, month, 1).getDay();

        for (let i = 0; i < firstDayOfMonth; i++) {
          const emptyDay = document.createElement('div');
          emptyDay.className = 'calendar-day';
          grid.appendChild(emptyDay);
        }

        for (let day = 1; day <= daysInMonth; day++) {
          const calendarDay = document.createElement('div');
          calendarDay.className = 'calendar-day';
          calendarDay.innerText = day;
          calendarDay.addEventListener('click', () => {
            selectedDate = new Date(year, month, day);
            if (localStorage.getItem(getStorageKey(selectedDate))) {
              showMemoDetail(selectedDate);
            } else {
              showMemo(selectedDate);
            }
          });

          if (localStorage.getItem(getStorageKey(new Date(year, month, day)))) {
            const memoMarker = document.createElement('span');
            memoMarker.className = 'memo-marker';
            calendarDay.appendChild(memoMarker);
          }

          grid.appendChild(calendarDay);
        }

        return grid;
      }

      function showMemo(date) {
        const memo = localStorage.getItem(getStorageKey(date)) || '';
        const memoText = prompt('Enter memo:', memo);
        if (memoText !== null) {
          localStorage.setItem(getStorageKey(date), memoText);
          renderCalendar(selectedDate.getFullYear(), selectedDate.getMonth());
        }
      }

      function showMemoDetail(date) {
        const memo = localStorage.getItem(getStorageKey(date)) || '';
        const memoText = prompt('Edit memo:', memo);
        if (memoText !== null) {
          localStorage.setItem(getStorageKey(date), memoText);
          renderCalendar(selectedDate.getFullYear(), selectedDate.getMonth());
        }
      }

      function getStorageKey(date) {
        return `memo_${date.getFullYear()}_${date.getMonth()}_${date.getDate()}`;
      }

      function getMonthName(month) {
        const monthNames = [
          'January', 'February', 'March', 'April', 'May', 'June',
          'July', 'August', 'September', 'October', 'November', 'December'
        ];
        return monthNames[month];
      }

      const currentDate = new Date();
      renderCalendar(currentDate.getFullYear(), currentDate.getMonth());
    });
  </script>
</body>
</html>
